{"version":3,"sources":["components/Title.js","components/Data.js","components/Info.js","components/Picture.js","components/Buttons.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","Data","data","datalist","CAL","totalNutrients","FAT","FASAT","FATRN","CHOLE","NA","CHOCDF","FIBTG","SUGAR","PROCNT","VITD","CA","FE","K","totalDaily","units","forEach","element","error","calories","toFixed","quantity","unit","colSpan","Info","Picture","list","Buttons","onClick","onClear","Input","onChange","placeholder","App","e","input","target","value","split","setState","getData","state","id","key","Promise","all","this","map","fetch","then","response","json","contents","console","log","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b4c1e73.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Title(){\n    return(\n        <div className=\"title\">\n            <h1>Do you know what you eat ?</h1>\n        </div>\n    );\n}","import React from 'react';\n\nexport default function Data({data}){\n    let datalist={\n        CAL :0,\n        totalNutrients :{\n            FAT    :0,\n            FASAT  :0,\n            FATRN  :0,\n            CHOLE  :0,\n            NA     :0,\n            CHOCDF :0,\n            FIBTG  :0,\n            SUGAR  :0,\n            PROCNT :0,\n            VITD   :0,\n            CA     :0,\n            FE     :0,\n            K      :0\n        },\n        totalDaily: {\n            FAT   :0,\n            FASAT :0,\n            FATRN :0,\n            CHOLE :0,\n            NA    :0,\n            CHOCDF:0,\n            FIBTG :0,\n            SUGAR :0,\n            PROCNT:0,\n            VITD  :0,\n            CA    :0,\n            FE    :0,\n            K     :0\n        },\n        units : {\n            FAT   :\"\",\n            FASAT :\"\",\n            FATRN :\"\",\n            CHOLE :\"\",\n            NA    :\"\",\n            CHOCDF:\"\",\n            FIBTG :\"\",\n            SUGAR :\"\",\n            PROCNT:\"\",\n            VITD  :\"\",\n            CA    :\"\",\n            FE    :\"\",\n            K     :\"\"\n        }\n    }\n\n    data.forEach(element => {\n        if(!element.error){\n\n        datalist.CAL+=element.calories? +element.calories.toFixed(1) :0;\n        \n        datalist.totalNutrients.FAT+= element.totalNutrients.FAT? +element.totalNutrients.FAT.quantity : 0;\n        datalist.totalNutrients.FASAT+= element.totalNutrients.FASAT? +element.totalNutrients.FASAT.quantity : 0;\n        datalist.totalNutrients.FATRN+= element.totalNutrients.FATRN? +element.totalNutrients.FATRN.quantity : 0;\n        datalist.totalNutrients.CHOLE+= element.totalNutrients.CHOLE? +element.totalNutrients.CHOLE.quantity : 0;\n        datalist.totalNutrients.NA+= element.totalNutrients.NA? +element.totalNutrients.NA.quantity : 0;\n        datalist.totalNutrients.CHOCDF+= element.totalNutrients.CHOCDF? +element.totalNutrients.CHOCDF.quantity : 0;\n        datalist.totalNutrients.FIBTG+= element.totalNutrients.FIBTG? +element.totalNutrients.FIBTG.quantity : 0;\n        datalist.totalNutrients.SUGAR+= element.totalNutrients.SUGAR? +element.totalNutrients.SUGAR.quantity : 0;\n        datalist.totalNutrients.PROCNT+= element.totalNutrients.PROCNT? +element.totalNutrients.PROCNT.quantity : 0;\n        datalist.totalNutrients.VITD+= element.totalNutrients.VITD? +element.totalNutrients.VITD.quantity : 0;\n        datalist.totalNutrients.CA+= element.totalNutrients.CA? +element.totalNutrients.CA.quantity : 0;\n        datalist.totalNutrients.FE+= element.totalNutrients.FE? +element.totalNutrients.FE.quantity : 0;\n        datalist.totalNutrients.K+= element.totalNutrients.K? +element.totalNutrients.K.quantity : 0;\n\n        datalist.units.FAT = element.totalNutrients.FAT? element.totalNutrients.FAT.unit : datalist.units.FAT;\n        datalist.units.FASAT = element.totalNutrients.FASAT? element.totalNutrients.FASAT.unit : datalist.units.FASAT;\n        datalist.units.FATRN = element.totalNutrients.FATRN? element.totalNutrients.FATRN.unit : datalist.units.FATRN;\n        datalist.units.CHOLE = element.totalNutrients.CHOLE? element.totalNutrients.CHOLE.unit : datalist.units.CHOLE;\n        datalist.units.NA = element.totalNutrients.NA? element.totalNutrients.NA.unit : datalist.units.NA;\n        datalist.units.CHOCDF = element.totalNutrients.CHOCDF? element.totalNutrients.CHOCDF.unit : datalist.units.CHOCDF;\n        datalist.units.FIBTG = element.totalNutrients.FIBTG? element.totalNutrients.FIBTG.unit : datalist.units.FIBTG;\n        datalist.units.SUGAR = element.totalNutrients.SUGAR? element.totalNutrients.SUGAR.unit : datalist.units.SUGAR;\n        datalist.units.PROCNT = element.totalNutrients.PROCNT? element.totalNutrients.PROCNT.unit : datalist.units.PROCNT;\n        datalist.units.VITD = element.totalNutrients.VITD? element.totalNutrients.VITD.unit : datalist.units.VITD;\n        datalist.units.CA = element.totalNutrients.CA? element.totalNutrients.CA.unit : datalist.units.CA;\n        datalist.units.FE = element.totalNutrients.FE? element.totalNutrients.FE.unit : datalist.units.FE;\n        datalist.units.K = element.totalNutrients.K? element.totalNutrients.K.unit : datalist.units.K;\n\n        datalist.totalDaily.FAT += element.totalDaily.FAT? +element.totalDaily.FAT.quantity : 0;\n        datalist.totalDaily.FASAT += element.totalDaily.FASAT? +element.totalDaily.FASAT.quantity : 0;\n        datalist.totalDaily.FATRN += element.totalDaily.FATRN? +element.totalDaily.FATRN.quantity : 0;\n        datalist.totalDaily.CHOLE += element.totalDaily.CHOLE? +element.totalDaily.CHOLE.quantity : 0;\n        datalist.totalDaily.NA += element.totalDaily.NA? +element.totalDaily.NA.quantity : 0;\n        datalist.totalDaily.CHOCDF += element.totalDaily.CHOCDF? +element.totalDaily.CHOCDF.quantity : 0;\n        datalist.totalDaily.FIBTG += element.totalDaily.FIBTG? +element.totalDaily.FIBTG.quantity : 0;\n        datalist.totalDaily.SUGAR += element.totalDaily.SUGAR? +element.totalDaily.SUGAR.quantity : 0;\n        datalist.totalDaily.PROCNT += element.totalDaily.PROCNT? +element.totalDaily.PROCNT.quantity : 0;\n        datalist.totalDaily.VITD += element.totalDaily.VITD? +element.totalDaily.VITD.quantity : 0;\n        datalist.totalDaily.CA += element.totalDaily.CA? +element.totalDaily.CA.quantity : 0;\n        datalist.totalDaily.FE += element.totalDaily.FE? +element.totalDaily.FE.quantity : 0;\n        datalist.totalDaily.K += element.totalDaily.K? +element.totalDaily.K.quantity : 0;\n        }\n    });\n\n    return(\n        <div className=\"table\" >\n            <table >\n                <thead>\n                    <tr className=\"heading row\">\n                        <th colSpan=\"3\"className=\"center bottom\" >Nutritional Analysis</th>\n                    </tr>\n                    <tr >\n                        <th colSpan=\"3\">Amount Per Serving</th>\n                    </tr>   \n                </thead>\n                <tbody>\n                    <tr >\n                        <th colSpan=\"2\" className=\"heading bottom\"><b>Calories</b></th>\n                        <td className=\"bottom\" >{`${datalist.CAL.toFixed(1)}`}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"3\" className=\"end small\"><b>% Daily Value*</b></td>\n                    </tr>\n                    <tr className=\"bottom\" >\n                        <td ><b>Total Fat</b></td>\n                        <td>{`${datalist.totalNutrients.FAT.toFixed(1)}${datalist.units.FAT}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.FAT.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"\"> Saturated Fat</td>\n                        <td>{`${datalist.totalNutrients.FASAT.toFixed(1)}${datalist.units.FASAT}`}</td>\n                        <td className=\"end\" ><b>{`${datalist.totalDaily.FASAT.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <td> Trans Fat </td>\n                        <td>{`${datalist.totalNutrients.FATRN.toFixed(1)}${datalist.units.FATRN}`}</td>\n                        <td className=\"end\" ><b>{`${datalist.totalDaily.FATRN.toFixed(1)}%`}</b></td>\t\n                    </tr>\n                    <tr>\n                        <th colSpan=\"\"><b>Cholesterol</b></th>\n                        <td>{`${datalist.totalNutrients.CHOLE.toFixed(1)}${datalist.units.CHOLE}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.CHOLE.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <th colSpan=\"\"><b>Sodium</b></th>\n                        <td>{`${datalist.totalNutrients.NA.toFixed(1)}${datalist.units.NA}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.NA.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <th colSpan=\"\"><b>Total Carbohydrate</b></th>\n                        <td>{`${datalist.totalNutrients.CHOCDF.toFixed(1)}${datalist.units.CHOCDF}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.CHOCDF.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Dietary Fiber</td>\n                        <td>{`${datalist.totalNutrients.FIBTG.toFixed(1)}${datalist.units.FIBTG}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.FIBTG.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Total Sugars -</td>\n                        <td>{`${datalist.totalNutrients.SUGAR.toFixed(1)}${datalist.units.SUGAR}`}</td>\n                        <td className=\"end\" ></td>\n                    </tr>\n                    <tr>\n                        <td>Includes - Added Sugars</td>\n                    </tr>\n                    <tr >\n                        <th colSpan=\"\"><b>Protein</b></th>\n                        <td>{`${datalist.totalNutrients.PROCNT.toFixed(1)}${datalist.units.PROCNT}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.PROCNT.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <th>Vitamin D</th>\n                        <td>{`${datalist.totalNutrients.VITD.toFixed(1)}${datalist.units.VITD}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.VITD.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <th>Calcium</th>\n                        <td>{`${datalist.totalNutrients.CA.toFixed(1)}${datalist.units.CA}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.CA.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <th>Iron</th>\n                        <td>{`${datalist.totalNutrients.FE.toFixed(1)}${datalist.units.FE}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.FE.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr>\n                        <th>Potassium</th>\n                        <td>{`${datalist.totalNutrients.K.toFixed(1)}${datalist.units.K}`}</td>\n                        <td className=\"end\"><b>{`${datalist.totalDaily.K.toFixed(1)}%`}</b></td>\n                    </tr>\n                    <tr colSpan=\"3\"><td className=\"extrasmall\">*Percent Daily Values are based on a 2000 calorie diet</td></tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}","import React from 'react';\n\nexport default function Info(){\n    return(\n        <div className=\"info\">\n            <h1>Nutritional Analysis</h1>\n            <p>Enter an ingredient list list for what you are cooking, like \"1 cup rice, 10 oz chickpeas\", etc.(separate the items with a coma \",\")</p>\n            <p>We will list out its contents</p>\n        </div>\n    )\n}","import React from 'react';\nimport './Picture.css';\nimport Data from './Data';\nimport Info from './Info';\n\nexport default function Picture({list,data}){\n    return(\n        <div className=\"pic\">\n            {\n                list?<div className=\"listdisplay\" >\n                        <Data data={data}/>\n                    </div>\n                :<Info/>\n            }\n        </div>\n    );\n}","import React from 'react';\n\nexport default function Buttons({onClick,onClear,list}){\n    return(\n        <div className=\"button-wrap\" >\n            <button className=\"btn_anlys\" onClick={onClick} >Analyse</button>\n            {list? <button className=\"btn_clr\" onClick={onClear}>Clear</button>:\"\"}\n        </div>\n    )\n}","import React from 'react';\nimport Buttons from './Buttons';\n\n\nexport default function Input({onClick,list,onClear,onChange}){\n    return(\n        <div className=\"inputdiv\">\n            <input className=\"inputbox text\" onChange={onChange} placeholder=\"eg: 1 cup rice, 10 oz chickpeas\"></input>\n            <Buttons onClick={onClick} onClear={onClear} list={list} />\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Title from './components/Title';\nimport Picture from './components/Picture';\nimport Input from './components/Input';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      list: false,\n      data: []\n    }\n    this.input=[];\n    this.data=[];\n    this.id=\"4c76fa57\";\n    this.key=\"f897caa507ab05ea9f4e6ad2566b0e35\";\n  }\n\n  onChange=(e)=>{\n      this.input= e.target.value.split(',');\n  }\n\n  onClear=()=>{\n    this.setState({list: false});\n  }\n\n  onClick=()=>{\n    this.getData();\n  }\n\n  getData(){\n    Promise.all(this.input.map(input=>{\n      return(fetch(`https://api.edamam.com/api/nutrition-data?app_id=${this.id}&app_key=${this.key}&ingr=${input}`)\n      .then(response=>{\n        return response.json();\n      })\n      );\n    }))\n    .then(contents=>{\n      console.log(contents);\n      this.setState({data:contents});\n    })\n    .then(this.setState({list:true}))\n    \n\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Title/>\n        <Picture list={this.state.list} data={this.state.data}/>\n        <Input list={this.state.list} onClick={this.onClick} onClear={this.onClear} onChange={this.onChange} input={this.input}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}